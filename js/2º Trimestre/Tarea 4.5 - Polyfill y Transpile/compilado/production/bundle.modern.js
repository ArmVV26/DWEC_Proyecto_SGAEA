(()=>{"use strict";class a{#a;#e;#n;#i;#r;#o;constructor(a,e,n,i,r,o){this.#a=a,this.#e=/^\d+$/.test(e)?e:0,this.#n=/^\d+$/.test(n)?n:0,this.#i=/^\d{5}$/.test(i)?i:0,this.#r=r,this.#o=o}mostrarDireccion(){return`   - Calle      : ${this.#a}        \n   - Numero     : ${this.#e}       \n   - Piso       : ${this.#n}         \n   - Cod. Postal: ${this.#i}   \n   - Provincia  : ${this.#r}    \n   - Localidad  : ${this.#o}    \n`}}class e{#s;#t;constructor(a){if(!/^[a-zA-ZáéíóúÁÉÍÓÚ ]+$/.test(a))throw new Error("El nombre de la Asignatura es erroneo");this.#s=a,this.#t=new Map}get nombre(){return this.#s}obtenerCalificaciones(a){return this.#t.get(a)||[]}addCalificacion(a,e){if("number"!=typeof e||isNaN(e))throw new Error(`La calificación asignada a la asignatura ${this.nombre} no es un numero`);if(e<0||e>10)throw new Error(`La calificacón asignada a la asignatura ${this.#s} no es valida (0 a 10)`);this.#t.has(a)?this.#t.get(a).push(e):this.#t.set(a,[e])}calcularPromedioGeneral(){let a=0,e=0;return this.#t.forEach(((n,i)=>{let r=0;r=n.reduce(((a,e)=>a+e),0),a+=r,e+=n.length})),a>0?(a/e).toFixed(2):"Sin calificaciones"}calcularPromedioEstudiante(a){const e=this.obtenerCalificaciones(a),n=e.reduce(((a,e)=>a+e),0),i=e.length;return n>0?(n/i).toFixed(2):"Sin evaluar"}mostrarAsignaturas(){let a=`─────────────────────────────── \n            ${this.#s} \n=============================== \n`;return 0===this.#t.size?a+="Sin calificaciones \n============================== \n":(this.#t.forEach(((e,n)=>{a+=`${n}: ${e.join(" - ")} \n`})),a+=`------------------------------ \n  - Promedio = ${this.calcularPromedioGeneral()} \n────────────────────────────── \n`),a}}class n{#s;#c;#l;constructor(a,e,n){if(!(/^[a-zA-ZáéíóúÁÉÍÓÚ ]+$/.test(a)&&e>=6&&e<=80))throw new Error("El nombre debe de tener solo letras y espacios. | La edad tiene que estar entre los 6 y 80 años");this.#s=a,this.#c=e,this.#l=n}get nombre(){return this.#s}get edad(){return this.#c}get direccion(){return this.#l.mostrarDireccion()}}class i extends n{static id_contador=1;static id_Disponibles=[];#u;#d;#g;constructor(a,e,n){super(a,e,n);const r=a.substring(0,3).toUpperCase();if(0!==i.id_Disponibles.length){const a=Math.min(...i.id_Disponibles),e=a.toString().padStart(3,"0");this.#u=`${r}${e}`;const n=i.id_Disponibles.indexOf(a);i.id_Disponibles.splice(n,1)}else{const a=i.id_contador.toString().padStart(3,"0");this.#u=`${r}${a}`,i.id_contador++}this.#d=[],this.#g=[]}get id(){return this.#u}get asignaturas(){return this.#d}matricular(...a){a.forEach((a=>{this.#d.includes(a)||(this.#d.push(a),this.#g.push([this.#h(),a.nombre,"Matricula"]))}))}desmatricular(...a){a.forEach((a=>{if(this.#d.includes(a)){const e=this.#d.indexOf(a);this.#d.splice(e,1),this.#g.push([this.#h(),a.nombre,"Desmatricula"])}}))}agregarCalificacion(a,e){if(this.#d.includes(a))try{a.addCalificacion(this.#u,e)}catch(a){console.error("Error - No se pudo añadir la nota: "+a.message)}}promedioTotalEstudiante(){let a=0,e=0;return this.#d.forEach((n=>{const i=n.obtenerCalificaciones(this.#u);let r=i.reduce(((a,e)=>a+e),0);a+=r,e+=i.length})),a>0?(a/e).toFixed(2):"Sin evaluar"}mostrarHistorial(){return`El historial del Estudiante ${this.nombre} es: \n`+this.#g.map((a=>`${a[0]} - ${a[1]} - ${a[2]}`)).join("\n")}mostrarEstudiante(){let a="";return this.#d.forEach((e=>{const n=e.obtenerCalificaciones(this.#u),i=e.calcularPromedioEstudiante(this.#u);a+=`${e.nombre}: ${n.join(" - ")} | Promedio: ${i} \n`})),`──────────────────────────────────── \n     ${this.#u} - ${this.nombre}   \n==================================== \n Edad: ${this.edad}    \n Direccion:             \n`+this.direccion+"==================================== \n    Asignaturas y Calificaciones \n==================================== \n"+`${a}──────────────────────────────────── \n`}#h(){return(new Date).toLocaleDateString("es-ES",{day:"2-digit",month:"2-digit",year:"numeric"})}}function r(){return console.log("Seleccione una opcion: \n1. Estudiantes \n2. Asignaturas \n0. Salir"),prompt("Seleccione una opcion: ")}function o(){let a="",e=1;return lista.estudiantes.forEach((n=>{a+=`${e} - [${n.id}] ${n.nombre}\n`,e++})),console.log(`Seleccione un Estudiante:\n${a}0 - Salir`),prompt("Seleccione una opcion: ")||0}function s(){let a="",e=1;return lista.asignaturas.forEach((n=>{a+=`${e} - ${n.nombre}\n`,e++})),console.log(`Seleccione una Asignatura:\n${a}0 - Salir`),prompt("Seleccione una opcion: ")||0}function t(a){if(a>-1&&a<lista.estudiantes.length){const e=lista.estudiantes.at(a);let n=`Asignaturas para el Estudiante ${e.nombre}: \n`,i=1;return lista.asignaturas.forEach((a=>{const r=e.asignaturas.includes(a)?"[Matriculado]":"";n+=`${i} - ${a.nombre} ${r}\n`,i++})),console.log(` ${n}0 - Salir`),prompt("Seleccione una opcion: ")||0}return lista.asignaturas.length+2}function c(a){if(a>-1&&a<lista.estudiantes.length){const e=lista.estudiantes.at(a);let n=`Asignaturas para el Estudiante ${e.nombre}: \n`,i=1;lista.asignaturas.forEach((a=>{if(e.asignaturas.includes(a)){const r=a.obtenerCalificaciones(e.id);n+=`${i} - ${a.nombre} [${r.join(" - ")}] \n`,i++}})),console.log(` ${n}0 - Salir`);const r=prompt("Seleccione una opcion: ");return r<i?r:lista.asignaturas.length+2}return lista.asignaturas.length+2}const l=new a("Calle Una",1,0,1e4,"Granada","Pulianas"),u=new a("Calle Dos",2,1,2e4,"Granada","Pulianas"),d=new a("Calle Tres",3,2,3e4,"Granada","Pulianas"),g=new a("Calle Cuatro",4,3,4e4,"Granada","Pulianas"),h=new a("Calle Cinco",5,4,5e4,"Granada","Pulianas"),p=new a("Calle Seis",6,5,6e4,"Granada","Pulianas"),m=new e("DAWEB"),f=new e("DWESE"),E=new e("DWECL"),b=new e("DIWEB"),$=new e("IAB"),C=new i("Armando Vaquero",23,l),A=new i("Antonio Fernandez",31,u),w=new i("Marcos Pineda",22,d),P=new i("Andrea Lopez",21,g),S=new i("Claudia Perez",26,h),I=new i("Jose Campos",28,p),k=new class{#p;#m;constructor(){this.#p=[],this.#m=[]}get estudiantes(){return this.#p}get asignaturas(){return this.#m}agregarEstudiante(a){return this.#p.includes(a)?"El estudiante ya está en la lista":(this.#p.push(a),"El estudiante ha sido añadido")}agregarAsignatura(a){return this.#m.includes(a)?"La asignatura ya está en la lista":(this.#m.push(a),"La asignatura ha sido añadida")}eliminarEstudiante(a){const e=this.#p.indexOf(a);return-1!==e?(this.#p.splice(e,1),Estudiante.id_Disponibles.push(parseInt(a.id.substring(3))),"Estudiante eliminado"):"El estudiante no esta en la lista"}eliminarAsignatura(a){const e=this.#m.indexOf(a);return-1!==e?(this.#m.splice(e,1),"Asignatura eliminada"):"La asignatura no esta en la lista"}buscarEstudiante(a){const e=this.#p.filter((e=>e.nombre.toLowerCase().includes(a.toLowerCase())));return e.length>0?e.map((a=>a.mostrarEstudiante())).join("\n"):"No se ha encontrado estudiantes con ese patron"}buscarAsignatura(a){const e=this.#m.filter((e=>e.nombre.toLowerCase().includes(a.toLowerCase())));return e.length>0?e.map((a=>a.mostrarAsignaturas())).join("\n"):"No se ha encontrado materias con ese patron"}};k.agregarEstudiante(C),k.agregarEstudiante(A),k.agregarEstudiante(w),k.agregarEstudiante(P),k.agregarEstudiante(S),k.agregarEstudiante(I),k.agregarAsignatura(m),k.agregarAsignatura(f),k.agregarAsignatura(E),k.agregarAsignatura(b),k.agregarAsignatura($),C.matricular(m,f,$),A.matricular(m,f,$),w.matricular(E,b,$),P.matricular(E,b,$),S.matricular(f,m,$),I.matricular(f,E,$),C.desmatricular($),A.desmatricular(f),w.desmatricular(E),P.desmatricular(b),S.desmatricular(m),I.desmatricular($),C.agregarCalificacion(m,7.5),C.agregarCalificacion(m,9),C.agregarCalificacion(f,10),A.agregarCalificacion(m,8),A.agregarCalificacion($,6),A.agregarCalificacion($,9),w.agregarCalificacion(b,10),w.agregarCalificacion(b,9),P.agregarCalificacion(E,6),P.agregarCalificacion(E,8),S.agregarCalificacion(f,10),S.agregarCalificacion($,7),S.agregarCalificacion($,9),I.agregarCalificacion(E,4),I.agregarCalificacion(E,8),function(){let n=!1;for(;!n;)switch(console.log("Menú Principal: \n1. Agregar Estudiante / Asignatura \n2. Eliminar Estudiante / Asignatura \n3. Mostrar Estudiantes / Asignaturas \n4. Matricular Estudiante \n5. Desmatricular Estudiante \n6. Añadir Calificación \n7. Mostrar Historial de un Estudiante \n8. Buscar Estudiante / Asignatura \n0. Salir del programa"),prompt("Seleccione una opción: ")){case"1":switch(console.clear(),r()){case"1":console.clear(),console.log("Comience con la creacion del Estudiante: ");const n=prompt("Introduce el nombre del estudiante:");console.log(`Nombre: ${n}`);const r=parseInt(prompt("Introduce la edad del estudiante:"));console.log(`Edad: ${r}`);const o=prompt("Introduce la calle del estudiante:");console.log(`Direccion: \n  - Calle: ${o}`);const s=parseInt(prompt("Introduce el número de la dirección:"));console.log(`  - Numero: ${s}`);const t=parseInt(prompt("Introduce el piso (0 si no aplica):"));console.log(`  - Piso: ${t}`);const c=parseInt(prompt("Introduce el código postal:"));console.log(`  - Cod. Postal: ${c}`);const l=prompt("Introduce la provincia:");console.log(`  - Provincia: ${l}`);const u=prompt("Introduce la localidad:");console.log(`  - Localidad: ${u}`);try{const e=new a(o,s,t,c,l,u),d=new i(n,r,e);console.log(k.agregarEstudiante(d))}catch(a){console.error("Error - No se pudo crear el Estudiante: "+a.message)}break;case"2":const d=prompt("Introduce el nombre de la asignatura:");try{const a=new e(d);console.log(k.agregarAsignatura(a))}catch(a){console.error("Error - No se pudo crear la Asignatura: "+a.message)}break;case"0":console.clear(),console.log("Vovliendo al Menú Principal ...");break;default:console.clear(),alert("Error al introducir una opcion")}break;case"2":switch(console.clear(),r()){case"1":const a=o()-1;if(a>-1){const e=k.estudiantes.at(a);console.clear(),console.log(k.eliminarEstudiante(e))}else-1===a?(console.clear(),console.log("Vovliendo al Menú Principal ...")):(console.log(a),alert("Error al introducir una opcion"));break;case"2":const e=s()-1;if(e>-1){const a=k.asignaturas.at(e);console.clear(),k.eliminarAsignatura(a)}else-1===a?(console.clear(),console.log("Vovliendo al Menú Principal ...")):alert("Error al introducir una opcion");break;case"0":console.clear(),console.log("Vovliendo al Menú Principal ...");break;default:console.clear(),alert("Error al introducir una opcion")}break;case"3":switch(console.clear(),r()){case"1":console.log(k.estudiantes.map((a=>a.mostrarEstudiante())).join("\n"));break;case"2":console.log(k.asignaturas.map((a=>a.mostrarAsignaturas())).join("\n"));break;case"0":console.clear(),console.log("Vovliendo al Menú Principal ...");break;default:console.clear(),alert("Error al introducir una opcion")}break;case"4":console.clear();const l=o()-1,u=t(l)-1;if(u>-1&&u<k.asignaturas.length){const a=k.estudiantes.at(l),e=k.asignaturas.at(u);a.matricular(e),console.clear(),console.log(`Estudiante ${a.nombre} Matriculado en ${e.nombre}`)}else-1===u?(console.clear(),console.log("Vovliendo al Menú Principal ...")):(console.clear(),alert("Error al introducir una opcion"));break;case"5":console.clear();const d=o()-1,g=t(d)-1;if(g>-1&&g<k.asignaturas.length){const a=k.estudiantes.at(d),e=k.asignaturas.at(g);a.desmatricular(e),console.clear(),console.log(`Estudiante ${a.nombre} Desmatriculado de ${e.nombre}`)}else-1===g?(console.clear(),console.log("Vovliendo al Menú Principal ...")):(console.clear(),alert("Error al introducir una opcion"));break;case"6":console.clear();const h=o()-1,p=c(h)-1;if(p>-1&&p<k.asignaturas.length){const a=k.estudiantes.at(h),e=k.asignaturas.at(p);console.log("Indica la calificacion");const n=parseFloat(prompt("Indica la calificación a añadir: "));try{e.addCalificacion(a.id,n),console.clear(),console.log(`Al Estudiante ${a.nombre} se le ha añadido la nota ${n} en la Asignatura ${e.nombre}`)}catch(a){console.clear(),console.error("Error - No se pudo añadir la calificación: "+a.message)}}else-1===p?(console.clear(),console.log("Vovliendo al Menú Principal ...")):(console.clear(),alert("Error al introducir una opcion"));break;case"7":console.clear();const m=o()-1;if(m>-1&&m<k.estudiantes.length){console.clear();const a=k.estudiantes.at(m);console.log(a.mostrarHistorial())}else-1===m?(console.clear(),console.log("Vovliendo al Menú Principal ...")):(console.clear(),alert("Error al introducir una opcion"));break;case"8":switch(console.clear(),r()){case"1":console.clear(),console.log("Indica el patron de busqueda para el Estudiante");const a=prompt("Introduce el patron");console.clear(),console.log(`Los Estudiantes que coinciden con "${a}" son: \n`+k.buscarEstudiante(a));break;case"2":console.clear(),console.log("Indica el patron de busqueda para la Asignatura");const e=prompt("Introduce el patron");console.clear(),console.log(`Las Asignaturas que coninciden con "${e}" son: \n`+k.buscarAsignatura(e));break;case"0":console.clear(),console.log("Vovliendo al Menú Principal ...");break;default:console.clear(),alert("Error al introducir una opcion")}break;case"0":alert("Saliendo de SGAEA ......."),n=!0;break;default:console.clear(),alert("Error al introducir una opcion")}}(),console.clear()})();