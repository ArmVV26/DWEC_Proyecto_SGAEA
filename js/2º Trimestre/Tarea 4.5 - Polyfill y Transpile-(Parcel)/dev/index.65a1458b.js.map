{"mappingspgsources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-67dfd122a1130164.js","src/main.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"0e97bf7165a1458b\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, disposedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    disposedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'reload') {\n      fullReload();\n    } else if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n        hmrDisposeQueue();\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        let processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","/**\r\n * @file ## SISTEMA DE GESTIÓN ACADÉMICA DE ESTUDIANTES Y ASIGNATURAS (SGAEA)\r\n * \r\n * En este proyecto se gestiona los datos académicos de estudiantes y asignaturas, proporcionando:\r\n * \r\n * - Matriculación y desmatriculación.\r\n * - Cálculo de promedios de calificaciones.\r\n * - Búsquedas avanzadas de Estudiantes y Asignaturas. \r\n * \r\n * ### Autor\r\n * **Armando Vaquero Vargas**\r\n * \r\n * - **Curso:** 2º DAW\r\n * - **Fecha:** 10/12/2024\r\n * - **Github:** {@link https://github.com/ArmVV26/DWEC_Proyecto_SGAEA}\r\n */\r\n\r\n/*\r\n    ┌─────────────┐\r\n    │ C L A S E S │\r\n    └─────────────┘\r\n    * En esta sección se definen las clases usadas en el proyecto. Cada clase contiene sus atributos,\r\n        constructores y métodos.\r\n*/\r\n\r\nimport { Direccion }  from \"./Direccion.js\";\r\nimport { Persona } from \"./Persona.js\";\r\nimport { Asignatura } from \"./Asignatura.js\";\r\nimport { Estudiante } from \"./Estudiante.js\";\r\nimport { Lista } from \"./Lista.js\";\r\n\r\n/*\r\n    ┌─────────────────────────────────┐\r\n    │ C Ó D I G O   P R I N C I P A L │\r\n    └─────────────────────────────────┘\r\n    * En esta sección se encuentra el código principal que se ejecuta al cargar el srcipt.\r\n*/\r\n/*\r\n    AÑADIR DATOS\r\n    ────────────\r\n    * Aqui añado datos para probar la funcionalidades de las clases, sin la necesidad de crear todo el\r\n        rato Estudiantes, Asignaturas, etc.\r\n*/\r\n\r\n//Creacion de las Direcciones.\r\nconst dir1 = new Direccion(\"Calle Una\", 1, 0, 10000, \"Granada\", \"Pulianas\");\r\nconst dir2 = new Direccion(\"Calle Dos\", 2, 1, 20000, \"Granada\", \"Pulianas\");\r\nconst dir3 = new Direccion(\"Calle Tres\", 3, 2, 30000, \"Granada\", \"Pulianas\");\r\nconst dir4 = new Direccion(\"Calle Cuatro\", 4, 3, 40000, \"Granada\", \"Pulianas\");\r\nconst dir5 = new Direccion(\"Calle Cinco\", 5, 4, 50000, \"Granada\", \"Pulianas\");\r\nconst dir6 = new Direccion(\"Calle Seis\", 6, 5, 60000, \"Granada\", \"Pulianas\");\r\n\r\n// Creación de las Asignaturas.\r\nconst DAWEB = new Asignatura(\"DAWEB\");\r\nconst DWESE = new Asignatura(\"DWESE\");\r\nconst DWECL = new Asignatura(\"DWECL\");\r\nconst DIWEB = new Asignatura(\"DIWEB\");\r\nconst IAB = new Asignatura(\"IAB\");\r\n\r\n// Creación de los Estudiantes.\r\nconst armando = new Estudiante(\"Armando Vaquero\",23,dir1);\r\nconst antonio = new Estudiante(\"Antonio Fernandez\",31,dir2);\r\nconst marcos = new Estudiante(\"Marcos Pineda\",22,dir3);\r\nconst andrea = new Estudiante(\"Andrea Lopez\",21,dir4);\r\nconst claudia = new Estudiante(\"Claudia Perez\",26,dir5);\r\nconst jose = new Estudiante(\"Jose Campos\",28,dir6);\r\n\r\n// Creación de la Lista.\r\nconst lista = new Lista();\r\n\r\n// Agregar Estudiantes\r\nlista.agregarEstudiante(armando);\r\nlista.agregarEstudiante(antonio);\r\nlista.agregarEstudiante(marcos);\r\nlista.agregarEstudiante(andrea);\r\nlista.agregarEstudiante(claudia);\r\nlista.agregarEstudiante(jose);\r\n\r\n// Agregar Asignaturas\r\nlista.agregarAsignatura(DAWEB);\r\nlista.agregarAsignatura(DWESE);\r\nlista.agregarAsignatura(DWECL);\r\nlista.agregarAsignatura(DIWEB);\r\nlista.agregarAsignatura(IAB);\r\n\r\n// Matriculaciones\r\narmando.matricular(DAWEB, DWESE, IAB);\r\nantonio.matricular(DAWEB, DWESE, IAB);\r\nmarcos.matricular(DWECL, DIWEB, IAB);\r\nandrea.matricular(DWECL, DIWEB, IAB);\r\nclaudia.matricular(DWESE, DAWEB, IAB);\r\njose.matricular(DWESE, DWECL, IAB);\r\n\r\n// Desmatriculaciones\r\narmando.desmatricular(IAB);\r\nantonio.desmatricular(DWESE);\r\nmarcos.desmatricular(DWECL);\r\nandrea.desmatricular(DIWEB);\r\nclaudia.desmatricular(DAWEB);\r\njose.desmatricular(IAB);\r\n\r\n// Añadir Calificaciones\r\narmando.agregarCalificacion(DAWEB, 7.5);\r\narmando.agregarCalificacion(DAWEB, 9);\r\narmando.agregarCalificacion(DWESE, 10);\r\n\r\nantonio.agregarCalificacion(DAWEB, 8);\r\nantonio.agregarCalificacion(IAB, 6);\r\nantonio.agregarCalificacion(IAB, 9);\r\n\r\nmarcos.agregarCalificacion(DIWEB, 10);\r\nmarcos.agregarCalificacion(DIWEB, 9);\r\n\r\nandrea.agregarCalificacion(DWECL, 6);\r\nandrea.agregarCalificacion(DWECL, 8);\r\n\r\nclaudia.agregarCalificacion(DWESE, 10);\r\nclaudia.agregarCalificacion(IAB, 7);\r\nclaudia.agregarCalificacion(IAB, 9);\r\n\r\njose.agregarCalificacion(DWECL, 4);\r\njose.agregarCalificacion(DWECL, 8);\r\n\r\n/*\r\n    FUNCIONES MENÚ\r\n    ──────────────\r\n    * Sección donde se encuentran importadas las diferentes funciones necesarias para la ejecución del código.    \r\n*/\r\n\r\nimport {\r\n    menuSecundario, seleccionarEstudiante, seleccionarAsignatura,\r\n    mostrarAsignaturasMatricula, mostrarAsignaturasEstudiante \r\n} from \"./Menus.js\";\r\n\r\n/**\r\n * @function\r\n * @description\r\n * Menú Principal del Sistema de Gestión Académica.\r\n * Este menú permite al usuario realizar las siguientes operaciones sobre los estudiantes y asignaturas:\r\n * - Agregar Estudiantes / Asignaturas.\r\n * - Eliminar Estudiantes / Asignaturas.\r\n * - Matricular al Estudiante.\r\n * - Desmatricular al Estudiante.\r\n * - Añadir calificaciones al Estudiante en una Asignatura.\r\n * - Mostrar historial del Estudiante.\r\n * - Buscar un Estudiante o Asignatura por un patrón.\r\n * \r\n * \r\n * @returns {void} No devuelve ningun valor.\r\n */\r\nfunction menuPrincipal() {\r\n    let salir = false;\r\n\r\n    while(!salir){\r\n        console.log( \"Menú Principal: \\n\" +\r\n                     \"1. Agregar Estudiante / Asignatura \\n\" +\r\n                     \"2. Eliminar Estudiante / Asignatura \\n\" +\r\n                     \"3. Mostrar Estudiantes / Asignaturas \\n\" +\r\n                     \"4. Matricular Estudiante \\n\" +\r\n                     \"5. Desmatricular Estudiante \\n\" +\r\n                     \"6. Añadir Calificación \\n\" +\r\n                     \"7. Mostrar Historial de un Estudiante \\n\" +\r\n                     \"8. Buscar Estudiante / Asignatura \\n\" +\r\n                     \"0. Salir del programa\" \r\n        );\r\n\r\n        let opcion = prompt(\"Seleccione una opción: \");\r\n\r\n        switch(opcion) {\r\n            /**\r\n             * Opcion 1: Agregar Estudiante / Asignatura.\r\n             * Permite crear un Estudiante o Asignatura nuevos. Depdende de lo que se seleccione en el menú secundario.\r\n             */\r\n            case \"1\":\r\n                console.clear();\r\n\r\n                switch(menuSecundario()) {\r\n                    case \"1\":\r\n                        console.clear();\r\n                        console.log(\"Comience con la creacion del Estudiante: \")\r\n\r\n                        const nombre_Est = prompt(\"Introduce el nombre del estudiante:\");\r\n                        console.log(`Nombre: ${nombre_Est}`);\r\n\r\n                        const edad = parseInt(prompt(\"Introduce la edad del estudiante:\"));\r\n                        console.log(`Edad: ${edad}`);\r\n\r\n                        const calle = prompt(\"Introduce la calle del estudiante:\");\r\n                        console.log(`Direccion: \\n` +\r\n                                    `  - Calle: ${calle}`);\r\n                        \r\n                        const numero = parseInt(prompt(\"Introduce el número de la dirección:\"));\r\n                        console.log(`  - Numero: ${numero}`);\r\n                        \r\n                        const piso = parseInt(prompt(\"Introduce el piso (0 si no aplica):\"));\r\n                        console.log(`  - Piso: ${piso}`);\r\n                        \r\n                        const cod_postal = parseInt(prompt(\"Introduce el código postal:\"));\r\n                        console.log(`  - Cod. Postal: ${cod_postal}`);\r\n                        \r\n                        const provincia = prompt(\"Introduce la provincia:\");\r\n                        console.log(`  - Provincia: ${provincia}`);\r\n                        \r\n                        const localidad = prompt(\"Introduce la localidad:\");\r\n                        console.log(`  - Localidad: ${localidad}`);\r\n                         \r\n                        try{\r\n                            // Creo una instancia de Dirección y de Estudiante.\r\n                            const dir_Nueva = new Direccion(calle, numero, piso, cod_postal, provincia, localidad);\r\n                            const est_Nuevo = new Estudiante(nombre_Est, edad, dir_Nueva);\r\n\r\n                            // Guardo al Estudiante en la Lista.\r\n                            console.log(lista.agregarEstudiante(est_Nuevo));\r\n                        }catch(error) {\r\n                            console.error(\"Error - No se pudo crear el Estudiante: \"+ error.message);\r\n                        }\r\n                        break;\r\n\r\n                    case \"2\":\r\n                        const nombre_Asig = prompt(\"Introduce el nombre de la asignatura:\");\r\n                        \r\n                        try{\r\n                            // Creo una instancia de Asignatura\r\n                            const asig_Nueva = new Asignatura(nombre_Asig);\r\n\r\n                            console.log(lista.agregarAsignatura(asig_Nueva));\r\n                        }catch(error) {\r\n                            console.error(\"Error - No se pudo crear la Asignatura: \"+ error.message);\r\n                        }\r\n                        break;\r\n\r\n                    case \"0\":\r\n                        console.clear();\r\n                        console.log(\"Vovliendo al Menú Principal ...\");\r\n                        break;\r\n\r\n                    default:\r\n                        console.clear();\r\n                        alert(\"Error al introducir una opcion\");\r\n                        break;\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 2: Eliminar Estudiante / Asignatura.\r\n             * Permite eliminar un Estudiante o Asignatura. Depdende de lo que se seleccione en el menú secundario.\r\n             */\r\n            case \"2\":\r\n                console.clear();\r\n\r\n                switch(menuSecundario()) {\r\n                    case \"1\":\r\n                        const posicion_Est = seleccionarEstudiante() - 1; // Obtengo la posición.\r\n                        if (posicion_Est > -1) {\r\n                            const alumno = lista.estudiantes.at(posicion_Est); // Obtengo el alumno de la Lista.\r\n\r\n                            console.clear();\r\n                            console.log(lista.eliminarEstudiante(alumno)); // Lo elimino.\r\n\r\n                        }else if(posicion_Est === -1) {\r\n                            console.clear();\r\n                            console.log(\"Vovliendo al Menú Principal ...\");\r\n\r\n                        }else {\r\n                            console.log(posicion_Est);\r\n                            alert(\"Error al introducir una opcion\");\r\n                        }\r\n                        break;\r\n\r\n                    case \"2\":\r\n                        const posicion_Asig = seleccionarAsignatura() - 1;\r\n                        if (posicion_Asig > -1) {\r\n                            const materia = lista.asignaturas.at(posicion_Asig); // Obtengo la materia.\r\n\r\n                            console.clear();\r\n                            lista.eliminarAsignatura(materia);\r\n\r\n                        }else if(posicion_Est === -1) {\r\n                            console.clear();\r\n                            console.log(\"Vovliendo al Menú Principal ...\");\r\n\r\n                        }else {\r\n                            alert(\"Error al introducir una opcion\");\r\n                        }\r\n                        break;\r\n\r\n                    case \"0\":\r\n                        console.clear();\r\n                        console.log(\"Vovliendo al Menú Principal ...\");\r\n                        break;\r\n\r\n                    default:\r\n                        console.clear();\r\n                        alert(\"Error al introducir una opcion\");\r\n                        break;\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 3: Mostrar Estudiantes / Asignaturas.\r\n             * Permite mostrar todos los Estudiante o las Asignaturas registradas en la Lista. Depdende de lo que se seleccione en el menú secundario.\r\n             */\r\n            case \"3\":\r\n                console.clear();\r\n\r\n                switch(menuSecundario()) {\r\n                    case \"1\":\r\n                        // Recorro \"lista.estudiantes\" y ejecuto para cada alumno el método \"mostrarEstudiante()\".\r\n                        console.log(lista.estudiantes.map(alumno => alumno.mostrarEstudiante()).join(\"\\n\"));\r\n                        break;\r\n\r\n                    case \"2\":\r\n                        // Recorro \"lista.asignaturas\" y ejecuto para cada materia el método \"mostrarAsignaturas()\".\r\n                        console.log(lista.asignaturas.map(materia => materia.mostrarAsignaturas()).join(\"\\n\"));\r\n                        break;\r\n\r\n                    case \"0\":\r\n                        console.clear();\r\n                        console.log(\"Vovliendo al Menú Principal ...\");\r\n                        break;\r\n\r\n                    default:\r\n                        console.clear();\r\n                        alert(\"Error al introducir una opcion\");\r\n                        break;\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 4: Matricular Estudiante.\r\n             * Permite matricular a un Estudiante a una Asignatura.\r\n             */\r\n            case \"4\":\r\n                console.clear();\r\n\r\n                const posicion_Est = seleccionarEstudiante() - 1; // Obtengo la posición del Estudiante.\r\n                const posicion_Asig = mostrarAsignaturasMatricula(posicion_Est) - 1; // Obtengo la posición de la Asignatura.\r\n\r\n                if (posicion_Asig > -1 && posicion_Asig < lista.asignaturas.length) {\r\n                    const alumno = lista.estudiantes.at(posicion_Est); // Obtengo el Estudiante.\r\n                    const materia = lista.asignaturas.at(posicion_Asig); // Obtengo la Asignatura.\r\n\r\n                    alumno.matricular(materia); // Hago la matriculación.  \r\n                    console.clear();\r\n                    console.log(`Estudiante ${alumno.nombre} Matriculado en ${materia.nombre}`);\r\n\r\n                }else if(posicion_Asig === -1) {\r\n                    console.clear();\r\n                    console.log(\"Vovliendo al Menú Principal ...\");\r\n                }else {\r\n                    console.clear();\r\n                    alert(\"Error al introducir una opcion\");\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 5: Desmatricular Estudiante.\r\n             * Permite desmatricular a un Estudiante de una Asignatura.\r\n             */\r\n            case \"5\":\r\n                console.clear();\r\n\r\n                const posicion_Alumno = seleccionarEstudiante() - 1;\r\n                const posicion_Materia = mostrarAsignaturasMatricula(posicion_Alumno) - 1;\r\n\r\n                if (posicion_Materia > -1 && posicion_Materia < lista.asignaturas.length) {\r\n                    const alumno = lista.estudiantes.at(posicion_Alumno);\r\n                    const materia = lista.asignaturas.at(posicion_Materia);\r\n\r\n                    alumno.desmatricular(materia); // Hago la desmatriculación.\r\n                    console.clear();\r\n                    console.log(`Estudiante ${alumno.nombre} Desmatriculado de ${materia.nombre}`);\r\n\r\n                }else if(posicion_Materia === -1) {\r\n                    console.clear();\r\n                    console.log(\"Vovliendo al Menú Principal ...\");\r\n                }else {\r\n                    console.clear();\r\n                    alert(\"Error al introducir una opcion\");\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 6: Añadir Calificación.\r\n             * Permite añadir una calificación a un Estudiante en una Asignatura.\r\n             */\r\n            case \"6\":\r\n                console.clear();\r\n\r\n                const pos_Estudiante = seleccionarEstudiante() - 1;\r\n                const pos_Materia = mostrarAsignaturasEstudiante(pos_Estudiante) - 1;\r\n\r\n                if (pos_Materia > -1 && pos_Materia < lista.asignaturas.length) {\r\n                    const alumno = lista.estudiantes.at(pos_Estudiante);\r\n                    const materia = lista.asignaturas.at(pos_Materia);\r\n\r\n                    console.log(\"Indica la calificacion\");\r\n                    const calificacion = parseFloat(prompt(\"Indica la calificación a añadir: \"));\r\n\r\n                    try{\r\n                        materia.addCalificacion(alumno.id, calificacion); // Añado la calificación.\r\n\r\n                        console.clear();\r\n                        console.log(`Al Estudiante ${alumno.nombre} se le ha añadido la nota ${calificacion} en la Asignatura ${materia.nombre}`);\r\n                    }catch(error) {\r\n                        console.clear();\r\n                        console.error(\"Error - No se pudo añadir la calificación: \"+ error.message);\r\n                    }\r\n                    \r\n                }else if(pos_Materia === -1) {\r\n                    console.clear();\r\n                    console.log(\"Vovliendo al Menú Principal ...\");\r\n                }else {\r\n                    console.clear();\r\n                    alert(\"Error al introducir una opcion\");\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 7: Mostrar Historial de un Estudiante.\r\n             * Permite mostrar el historial de un Estudiante.\r\n             */\r\n            case \"7\":\r\n                console.clear();\r\n\r\n                const pos_Est = seleccionarEstudiante() - 1;\r\n\r\n                if (pos_Est > -1 && pos_Est < lista.estudiantes.length) {\r\n\r\n                    console.clear();\r\n                    const alumno = lista.estudiantes.at(pos_Est);\r\n                    console.log(alumno.mostrarHistorial()); // Muestro el historial del Estudiante.\r\n\r\n                }else if(pos_Est === -1) {\r\n                    console.clear();\r\n                    console.log(\"Vovliendo al Menú Principal ...\");\r\n\r\n                }else {\r\n                    console.clear();\r\n                    alert(\"Error al introducir una opcion\");\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 8: Buscar Estudiante / Asignatura.\r\n             * Permite buscar a un Estudiante o una Asignatura por un patrón de su nombre.\r\n             */\r\n            case \"8\":\r\n                console.clear();\r\n\r\n                switch(menuSecundario()) {\r\n                    case \"1\":\r\n                        console.clear();\r\n                        console.log(\"Indica el patron de busqueda para el Estudiante\");\r\n                        const patron_Est = prompt(\"Introduce el patron\"); // Obtengo el patrón.\r\n\r\n                        console.clear();\r\n                        console.log(`Los Estudiantes que coinciden con \"${patron_Est}\" son: \\n` + \r\n                                    lista.buscarEstudiante(patron_Est)); // Muestro los resultados.\r\n                        break;\r\n\r\n                    case \"2\":\r\n                        console.clear();\r\n                        console.log(\"Indica el patron de busqueda para la Asignatura\");\r\n                        const patron_Asig = prompt(\"Introduce el patron\");\r\n                        \r\n                        console.clear();\r\n                        console.log(`Las Asignaturas que coninciden con \"${patron_Asig}\" son: \\n` +\r\n                                    lista.buscarAsignatura(patron_Asig));\r\n                        break;\r\n\r\n                    case \"0\":\r\n                        console.clear();\r\n                        console.log(\"Vovliendo al Menú Principal ...\");\r\n                        break;\r\n\r\n                    default:\r\n                        console.clear();\r\n                        alert(\"Error al introducir una opcion\");\r\n                        break;\r\n                }\r\n                break;\r\n            /**\r\n             * Opcion 0: Salir del programa.\r\n             * Permite salir del programa.\r\n             */\r\n            case \"0\":\r\n                alert(\"Saliendo de SGAEA .......\");\r\n                salir = true;\r\n                break;\r\n            \r\n            default:\r\n                console.clear();\r\n                alert(\"Error al introducir una opcion\");\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n// Con esto comienzo el programa a ejecutarse (llamando a la funcion principal)\r\nmenuPrincipal();\r\nconsole.clear();"],"names":[],"version":3,"file":"index.65a1458b.js.map","sourceRoot":"/__parcel_source_root/"}